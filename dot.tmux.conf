# tmux configuration file
# author: engel-ch@outlook.com
# license: MIT
# last update: 2019-04-16
# version 0.3
# description: tmux.conf enabling
# - mouse selections
# - default (OSX) selection mode when pressing the Alt key
# - 1..n window numbering starting from 1 instead of 0
# - F1..F8 to switch windows
# - F9 to start copy mode
# - prefix r  to reload the configuration file
# - Shift left/right-arrow  to switch between windows
#
############################################
#

# scrolling
set-option -g mouse on

# Start Window Numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# set -g mouse on
# 190716 options changed for OSX Terminal.app
#set-option -g mouse-select-pane off
#set-option -g mouse-resize-pane off
#set-option -g mouse-select-window off
#set-window-option -g mode-mouse off
set-window-option -g mode-keys vi
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

set-option -g set-titles on

bind-key 	c 	command-prompt -p "window name:" "new-window; rename-window '%%'"

bind-key -n F1 select-window -t :=1
bind-key -n F2 select-window -t :=2
bind-key -n F3 select-window -t :=3
bind-key -n F4 select-window -t :=4
bind-key -n F5 select-window -t :=5
bind-key -n F6 select-window -t :=6
bind-key -n F7 select-window -t :=7
bind-key -n F8 select-window -t :=8
bind-key -n F9 select-window -t :=9
bind-key -n F10 select-window -t :=10
bind-key -n F11 select-window -t :=11

bind-key -n F12 copy-mode -t :=.

# vi cursor movement
# begin selection with space
# end selection with enter
# insert selection using \cmd-v or
# q quit mode
#
# tmux show-buffer
# tmux save-buffer foo.txt
# ^b #      # show all paste-buffers
# tmux list-buffers

# Shift arrow to switch windows
bind -r -n S-Left  previous-window
bind -r -n S-Right next-window

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key R split-window -h "vim ~/.tmux.conf"

# commands
# tmux ls						:- list-sessions
# tmux attach -t name		:- attach to session by name
# tmux a -t name				:-   "
# tmux detach					:- detach from the current sesion
# prefix d						:-   "

# Sessions
#
# Sessions are useful for completely separating work environments. I have a ‘Work’ session and a ‘Play’ session; in ‘Work’,
# I keep everything open that I need during my day-to-day development, while in ‘Play’, I keep open current open-source gems
# or other work I hack on at home.
#
# tmux new -s session_name                      # creates a new tmux session named session_name
# tmux attach -t session_name                   # attaches to an existing tmux session named session_name
# tmux switch -t session_name                   # switches to an existing session named session_name
# tmux list-sessions                            # lists existing tmux sessions
# ^b s                                          # show all sessions
# tmux detach (prefix + d)                      # detach the currently attached session

# Windows
#
# tmux has a tabbed interface, but it calls its tabs “Windows”. To stay organized, I rename all the windows I use; if I’m hacking
# on a gem, I’ll name the window that gem’s name. The same thing goes for client applications. That way, I can recognize windows
# by context and not what application it’s running.
#
# tmux new-window (prefix + c)                  # create a new window
# tmux select-window -t :0-9 (prefix + 0-9)     # move to the window based on index
# tmux rename-window (prefix + ,)               # rename the current window

# Panes
#
# Panes take my development time from bland to awesome. They’re the reason I was able to uninstall MacVim and develop solely in iTerm2.
# I don’t have to switch applications to switch contexts (editing, reading logs, IRB, etc.) - everything I do, I do in a terminal now.
# People argue that OS X’s Cmd+Tab is just as fast, but I don’t think so.
#
# tmux split-window (prefix + ")                # splits the window into two vertical panes
# tmux split-window -h (prefix + %)             # splits the window into two horizontal panes
# tmux swap-pane -[UDLR] (prefix + { or })      # swaps pane with another in the specified direction
# tmux select-pane -[UDLR]                      # selects the next pane in the specified direction
# tmux select-pane -t :.+                       # selects the next pane in numerical order
# prefix + x                                    # remove current pane
# prefix + !                                    # break-pane => convert pane into window
# prefix + q                                    # display panes
# prefix + arrow-up/down/left/right             # move cursor to pane in this direction

# Helpful commands
#
# tmux list-keys                                # lists out every bound key and the tmux command it runs
# tmux list-commands                            # lists out every tmux command and its arguments
# tmux info                                     # lists out every session, window, pane, its pid, etc.
# tmux source-file ~/.tmux.conf                 # reloads the current tmux configuration (based on a default tmux config)

# documentation collection from
# - tmux manual page
# - https://thoughtbot.com/blog/a-tmux-crash-course
# - http://uploads.mitechie.com/books/tmux_p1_1.pdf
